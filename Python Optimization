{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMmVPG5+uZ44TXR4tZgZhW9",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Amer-Hassan/Data-Science/blob/main/Python%20Optimization\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy\n",
        "\n",
        "hugeNumber = float(\"inf\")\n",
        "unused     = -1e10\n",
        "\n",
        "stages            = 12\n",
        "inventoryCapacity = 25\n",
        "maxBuy            = 10\n",
        "maxSell           = 15\n",
        "\n",
        "startingInventory  = 3\n",
        "\n",
        "holdingCost     =   11.00\n",
        "transactionCost =  120.00\n",
        "\n",
        "price = numpy.array([unused, 108, 78, 60, 56, 97, 130, 141, 100, 70, 59, 90, 133])\n",
        "\n",
        "f = numpy.zeros([stages + 2, inventoryCapacity + 1])\n",
        "x = numpy.zeros([stages + 1, inventoryCapacity + 1], dtype = int)\n",
        "\n",
        "# If not zero, set each f[stages+1,i] to the terminal value of being in state i at the end\n",
        "# For states that are not allowed, use hugenumber for minimization, -hugenumber for maximization\n",
        "\n",
        "for t in range(stages, 0, -1):\n",
        "\n",
        "    # If necessary, determine which states are possible at stage t\n",
        "    # (This is usually not necessary in the examples in this class)\n",
        "\n",
        "    for i in range(inventoryCapacity + 1):\n",
        "\n",
        "        # Determine set of decisions d which are possible from this state and stage\n",
        "        msell = -min(i, maxSell)\n",
        "        mbuy =  min(inventoryCapacity - i, maxBuy)\n",
        "\n",
        "        value =  -hugeNumber\n",
        "\n",
        "        for d in range(msell, mbuy + 1):\n",
        "            j = i + d\n",
        "            if d < 0:  # Selling\n",
        "                immediateGain = -d * price[t] - transactionCost\n",
        "                moveValue = immediateGain + f[t + 1, j] - holdingCost * j\n",
        "            elif d > 0:  # Buying\n",
        "                immediateCost = d * price[t] + transactionCost\n",
        "                if i + d <= inventoryCapacity:\n",
        "                    moveValue = -immediateCost + f[t + 1, j] - holdingCost * j\n",
        "            else:  # Holding\n",
        "                moveValue = f[t + 1, j] - holdingCost * j\n",
        "            if moveValue > value:   # use < instead of > if minimizing\n",
        "                value = moveValue\n",
        "                bestMove = d\n",
        "        # End of d loop\n",
        "\n",
        "        f[t, i] = value\n",
        "        x[t, i] = bestMove\n",
        "\n",
        "    # End of i loop\n",
        "\n",
        "\n",
        "# Print the optimal strategy\n",
        "print(\"Optimal profit is \" + str(f[1, startingInventory]))\n",
        "solutionString = \"Trade amounts:\"\n",
        "i = startingInventory\n",
        "for t in range(1, stages + 1):\n",
        "  solutionString += \" \" + str(x[t, i])\n",
        "  i = i + x[t, i]\n",
        "print(solutionString)\n",
        "\n",
        "print(\"Ending inventory at month 12 is\", i)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gJKTsQNH7-kz",
        "outputId": "f79aab76-070f-4dca-e3af-2c9d6e9d448d"
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Optimal profit is 955.0\n",
            "Trade amounts: 0 0 10 10 0 -15 -8 0 0 10 5 -15\n",
            "Ending inventory at month 12 is 0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from random import randint\n",
        "import numpy\n",
        "hugeNumber = float(\"inf\")\n",
        "initialStock = 30\n",
        "stages = 12\n",
        "priceLevel = numpy.array([110.0,125.00,150.00,175.00])\n",
        "numberOfPrices = len(priceLevel)\n",
        "maxSalesPerPeriod = 4\n",
        "salesProb = numpy.array([[0.08, 0.21, 0.26, 0.21, 0.24],\n",
        "       [0.12, 0.25, 0.27, 0.19, 0.17],\n",
        "       [0.18, 0.31, 0.26, 0.15, 0.1 ],\n",
        "       [0.25, 0.35, 0.24, 0.11, 0.05]])\n",
        "salvageCost = 5.0\n",
        "\n",
        "f = numpy.zeros([stages + 2, inventoryCapacity + 1])\n",
        "x = numpy.zeros([stages + 1, inventoryCapacity + 1], dtype=int)\n",
        "\n",
        "for i in range(initialStock + 1):\n",
        "    f[stages + 1, i] = -salvageCost * i\n",
        "\n",
        "for t in range(stages, 0 ,-1):\n",
        "\n",
        "    for i in range(initialStock + 1):\n",
        "        value = -hugeNumber\n",
        "        for d in range(numberOfPrices):\n",
        "            moveValue = 0\n",
        "            currentprice = priceLevel[d]\n",
        "            currentprob = salesProb[d]\n",
        "            for r in range(len(currentprob)):\n",
        "                sold = min(i ,r)\n",
        "                j = i - sold\n",
        "                prob = currentprob[r]\n",
        "                moveValue += prob * (currentprice * r + f[t+1,j])\n",
        "        # Determine set of decisions d which are possible in this stage/state\n",
        "            if moveValue > value:\n",
        "                value = moveValue\n",
        "                bestMove = d\n",
        "      # End of d loop\n",
        "        f[t, i] = value\n",
        "        x[t, i] = bestMove\n",
        "# End of i loop\n",
        "# End of t loop\n",
        "\n",
        "print(\"Optimal solution value is \" + str(f[1,(initialStock)]))\n",
        "print(\"Month 1 set price to \" + str(x[1,initalStock]))\n",
        "for t in range(2,stages+1) :\n",
        "  print(\"Period \" + str(t) + \":\")\n",
        "  for i in range(inventoryCapacity + 1) :\n",
        "    print(\" If inventory=\" + str(i) + \", produce \" + str(x[t,i]))\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 228
        },
        "id": "gZc2B0OLq_Og",
        "outputId": "664d6ca9-e94b-4f06-92ef-4f87eefc6423"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Optimal solution value is 3047.2615099037175\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "name 'initalStock' is not defined",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-172-c7b7411edc6b>\u001b[0m in \u001b[0;36m<cell line: 45>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     43\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     44\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Optimal solution value is \"\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minitialStock\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 45\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Period 1: produce \"\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0minitalStock\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     46\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mt\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mstages\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     47\u001b[0m   \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Period \"\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mt\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m\":\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'initalStock' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy\n",
        "\n",
        "hugeNumber = float(\"inf\")\n",
        "initialStock = 30\n",
        "stages = 12\n",
        "priceLevel = numpy.array([110.0, 125.00, 150.00, 175.00])\n",
        "numberOfPrices = len(priceLevel)\n",
        "maxSalesPerPeriod = 4\n",
        "salesProb = numpy.array([[0.08, 0.21, 0.26, 0.21, 0.24],\n",
        "                         [0.12, 0.25, 0.27, 0.19, 0.17],\n",
        "                         [0.18, 0.31, 0.26, 0.15, 0.1],\n",
        "                         [0.25, 0.35, 0.24, 0.11, 0.05]])\n",
        "salvageCost = 5.0\n",
        "\n",
        "inventoryCapacity = initialStock  # Assuming inventory capacity is equal to initial stock\n",
        "\n",
        "f = numpy.zeros([stages + 2, inventoryCapacity + 1])\n",
        "x = numpy.zeros([stages + 1, inventoryCapacity + 1], dtype=int)\n",
        "\n",
        "for i in range(initialStock + 1):\n",
        "    f[stages + 1, i] = -salvageCost * i\n",
        "\n",
        "for t in range(stages, 0, -1):\n",
        "    for i in range(initialStock + 1):\n",
        "        value = -hugeNumber\n",
        "        for d in range(numberOfPrices):\n",
        "            moveValue = 0\n",
        "            currentprice = priceLevel[d]\n",
        "            currentprob = salesProb[d]\n",
        "            for r in range(len(currentprob)):\n",
        "                sold = min(i, r)\n",
        "                j = i - sold\n",
        "                prob = currentprob[r]\n",
        "                moveValue += prob * (currentprice * sold + f[t + 1, j])\n",
        "\n",
        "            if moveValue > value:\n",
        "                value = moveValue\n",
        "                bestMove = d\n",
        "\n",
        "        f[t, i] = value\n",
        "        x[t, i] = bestMove\n",
        "\n",
        "print(\"Optimal solution value is \" + str(f[1, initialStock]))\n",
        "print(\"Month 1 set price to \" + str(priceLevel[x[1, initialStock]]))  # Fix typo in variable name\n",
        "for t in range (1, stages + 1):\n",
        "    print(\"month \" + str(t) + \":\")\n",
        "    for i in range(initialStock + 1):\n",
        "        print(\" If inventory is \" + str(i) + \", set price to \" + str(priceLevel[x[t, i]]))  # Fix typo in variable name\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ygqfVwpeQ_Rs",
        "outputId": "e9e9b563-affc-4760-cd57-d3d1c7bf7618"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Optimal solution value is 3025.824138318765\n",
            "Month 1 set price to 125.0\n",
            "month 1:\n",
            " If inventory is 0, set price to 110.0\n",
            " If inventory is 1, set price to 175.0\n",
            " If inventory is 2, set price to 175.0\n",
            " If inventory is 3, set price to 175.0\n",
            " If inventory is 4, set price to 175.0\n",
            " If inventory is 5, set price to 175.0\n",
            " If inventory is 6, set price to 175.0\n",
            " If inventory is 7, set price to 175.0\n",
            " If inventory is 8, set price to 175.0\n",
            " If inventory is 9, set price to 175.0\n",
            " If inventory is 10, set price to 175.0\n",
            " If inventory is 11, set price to 175.0\n",
            " If inventory is 12, set price to 175.0\n",
            " If inventory is 13, set price to 175.0\n",
            " If inventory is 14, set price to 175.0\n",
            " If inventory is 15, set price to 175.0\n",
            " If inventory is 16, set price to 175.0\n",
            " If inventory is 17, set price to 175.0\n",
            " If inventory is 18, set price to 175.0\n",
            " If inventory is 19, set price to 175.0\n",
            " If inventory is 20, set price to 175.0\n",
            " If inventory is 21, set price to 150.0\n",
            " If inventory is 22, set price to 150.0\n",
            " If inventory is 23, set price to 150.0\n",
            " If inventory is 24, set price to 150.0\n",
            " If inventory is 25, set price to 150.0\n",
            " If inventory is 26, set price to 150.0\n",
            " If inventory is 27, set price to 150.0\n",
            " If inventory is 28, set price to 125.0\n",
            " If inventory is 29, set price to 125.0\n",
            " If inventory is 30, set price to 125.0\n",
            "month 2:\n",
            " If inventory is 0, set price to 110.0\n",
            " If inventory is 1, set price to 175.0\n",
            " If inventory is 2, set price to 175.0\n",
            " If inventory is 3, set price to 175.0\n",
            " If inventory is 4, set price to 175.0\n",
            " If inventory is 5, set price to 175.0\n",
            " If inventory is 6, set price to 175.0\n",
            " If inventory is 7, set price to 175.0\n",
            " If inventory is 8, set price to 175.0\n",
            " If inventory is 9, set price to 175.0\n",
            " If inventory is 10, set price to 175.0\n",
            " If inventory is 11, set price to 175.0\n",
            " If inventory is 12, set price to 175.0\n",
            " If inventory is 13, set price to 175.0\n",
            " If inventory is 14, set price to 175.0\n",
            " If inventory is 15, set price to 175.0\n",
            " If inventory is 16, set price to 175.0\n",
            " If inventory is 17, set price to 175.0\n",
            " If inventory is 18, set price to 175.0\n",
            " If inventory is 19, set price to 175.0\n",
            " If inventory is 20, set price to 150.0\n",
            " If inventory is 21, set price to 150.0\n",
            " If inventory is 22, set price to 150.0\n",
            " If inventory is 23, set price to 150.0\n",
            " If inventory is 24, set price to 150.0\n",
            " If inventory is 25, set price to 150.0\n",
            " If inventory is 26, set price to 125.0\n",
            " If inventory is 27, set price to 125.0\n",
            " If inventory is 28, set price to 125.0\n",
            " If inventory is 29, set price to 110.0\n",
            " If inventory is 30, set price to 110.0\n",
            "month 3:\n",
            " If inventory is 0, set price to 110.0\n",
            " If inventory is 1, set price to 175.0\n",
            " If inventory is 2, set price to 175.0\n",
            " If inventory is 3, set price to 175.0\n",
            " If inventory is 4, set price to 175.0\n",
            " If inventory is 5, set price to 175.0\n",
            " If inventory is 6, set price to 175.0\n",
            " If inventory is 7, set price to 175.0\n",
            " If inventory is 8, set price to 175.0\n",
            " If inventory is 9, set price to 175.0\n",
            " If inventory is 10, set price to 175.0\n",
            " If inventory is 11, set price to 175.0\n",
            " If inventory is 12, set price to 175.0\n",
            " If inventory is 13, set price to 175.0\n",
            " If inventory is 14, set price to 175.0\n",
            " If inventory is 15, set price to 175.0\n",
            " If inventory is 16, set price to 175.0\n",
            " If inventory is 17, set price to 175.0\n",
            " If inventory is 18, set price to 150.0\n",
            " If inventory is 19, set price to 150.0\n",
            " If inventory is 20, set price to 150.0\n",
            " If inventory is 21, set price to 150.0\n",
            " If inventory is 22, set price to 150.0\n",
            " If inventory is 23, set price to 150.0\n",
            " If inventory is 24, set price to 125.0\n",
            " If inventory is 25, set price to 125.0\n",
            " If inventory is 26, set price to 125.0\n",
            " If inventory is 27, set price to 110.0\n",
            " If inventory is 28, set price to 110.0\n",
            " If inventory is 29, set price to 110.0\n",
            " If inventory is 30, set price to 110.0\n",
            "month 4:\n",
            " If inventory is 0, set price to 110.0\n",
            " If inventory is 1, set price to 175.0\n",
            " If inventory is 2, set price to 175.0\n",
            " If inventory is 3, set price to 175.0\n",
            " If inventory is 4, set price to 175.0\n",
            " If inventory is 5, set price to 175.0\n",
            " If inventory is 6, set price to 175.0\n",
            " If inventory is 7, set price to 175.0\n",
            " If inventory is 8, set price to 175.0\n",
            " If inventory is 9, set price to 175.0\n",
            " If inventory is 10, set price to 175.0\n",
            " If inventory is 11, set price to 175.0\n",
            " If inventory is 12, set price to 175.0\n",
            " If inventory is 13, set price to 175.0\n",
            " If inventory is 14, set price to 175.0\n",
            " If inventory is 15, set price to 175.0\n",
            " If inventory is 16, set price to 150.0\n",
            " If inventory is 17, set price to 150.0\n",
            " If inventory is 18, set price to 150.0\n",
            " If inventory is 19, set price to 150.0\n",
            " If inventory is 20, set price to 150.0\n",
            " If inventory is 21, set price to 150.0\n",
            " If inventory is 22, set price to 125.0\n",
            " If inventory is 23, set price to 125.0\n",
            " If inventory is 24, set price to 125.0\n",
            " If inventory is 25, set price to 110.0\n",
            " If inventory is 26, set price to 110.0\n",
            " If inventory is 27, set price to 110.0\n",
            " If inventory is 28, set price to 110.0\n",
            " If inventory is 29, set price to 110.0\n",
            " If inventory is 30, set price to 110.0\n",
            "month 5:\n",
            " If inventory is 0, set price to 110.0\n",
            " If inventory is 1, set price to 175.0\n",
            " If inventory is 2, set price to 175.0\n",
            " If inventory is 3, set price to 175.0\n",
            " If inventory is 4, set price to 175.0\n",
            " If inventory is 5, set price to 175.0\n",
            " If inventory is 6, set price to 175.0\n",
            " If inventory is 7, set price to 175.0\n",
            " If inventory is 8, set price to 175.0\n",
            " If inventory is 9, set price to 175.0\n",
            " If inventory is 10, set price to 175.0\n",
            " If inventory is 11, set price to 175.0\n",
            " If inventory is 12, set price to 175.0\n",
            " If inventory is 13, set price to 175.0\n",
            " If inventory is 14, set price to 175.0\n",
            " If inventory is 15, set price to 150.0\n",
            " If inventory is 16, set price to 150.0\n",
            " If inventory is 17, set price to 150.0\n",
            " If inventory is 18, set price to 150.0\n",
            " If inventory is 19, set price to 150.0\n",
            " If inventory is 20, set price to 125.0\n",
            " If inventory is 21, set price to 125.0\n",
            " If inventory is 22, set price to 110.0\n",
            " If inventory is 23, set price to 110.0\n",
            " If inventory is 24, set price to 110.0\n",
            " If inventory is 25, set price to 110.0\n",
            " If inventory is 26, set price to 110.0\n",
            " If inventory is 27, set price to 110.0\n",
            " If inventory is 28, set price to 110.0\n",
            " If inventory is 29, set price to 110.0\n",
            " If inventory is 30, set price to 110.0\n",
            "month 6:\n",
            " If inventory is 0, set price to 110.0\n",
            " If inventory is 1, set price to 175.0\n",
            " If inventory is 2, set price to 175.0\n",
            " If inventory is 3, set price to 175.0\n",
            " If inventory is 4, set price to 175.0\n",
            " If inventory is 5, set price to 175.0\n",
            " If inventory is 6, set price to 175.0\n",
            " If inventory is 7, set price to 175.0\n",
            " If inventory is 8, set price to 175.0\n",
            " If inventory is 9, set price to 175.0\n",
            " If inventory is 10, set price to 175.0\n",
            " If inventory is 11, set price to 175.0\n",
            " If inventory is 12, set price to 175.0\n",
            " If inventory is 13, set price to 150.0\n",
            " If inventory is 14, set price to 150.0\n",
            " If inventory is 15, set price to 150.0\n",
            " If inventory is 16, set price to 150.0\n",
            " If inventory is 17, set price to 125.0\n",
            " If inventory is 18, set price to 125.0\n",
            " If inventory is 19, set price to 125.0\n",
            " If inventory is 20, set price to 110.0\n",
            " If inventory is 21, set price to 110.0\n",
            " If inventory is 22, set price to 110.0\n",
            " If inventory is 23, set price to 110.0\n",
            " If inventory is 24, set price to 110.0\n",
            " If inventory is 25, set price to 110.0\n",
            " If inventory is 26, set price to 110.0\n",
            " If inventory is 27, set price to 110.0\n",
            " If inventory is 28, set price to 110.0\n",
            " If inventory is 29, set price to 110.0\n",
            " If inventory is 30, set price to 110.0\n",
            "month 7:\n",
            " If inventory is 0, set price to 110.0\n",
            " If inventory is 1, set price to 175.0\n",
            " If inventory is 2, set price to 175.0\n",
            " If inventory is 3, set price to 175.0\n",
            " If inventory is 4, set price to 175.0\n",
            " If inventory is 5, set price to 175.0\n",
            " If inventory is 6, set price to 175.0\n",
            " If inventory is 7, set price to 175.0\n",
            " If inventory is 8, set price to 175.0\n",
            " If inventory is 9, set price to 175.0\n",
            " If inventory is 10, set price to 175.0\n",
            " If inventory is 11, set price to 150.0\n",
            " If inventory is 12, set price to 150.0\n",
            " If inventory is 13, set price to 150.0\n",
            " If inventory is 14, set price to 150.0\n",
            " If inventory is 15, set price to 125.0\n",
            " If inventory is 16, set price to 125.0\n",
            " If inventory is 17, set price to 125.0\n",
            " If inventory is 18, set price to 110.0\n",
            " If inventory is 19, set price to 110.0\n",
            " If inventory is 20, set price to 110.0\n",
            " If inventory is 21, set price to 110.0\n",
            " If inventory is 22, set price to 110.0\n",
            " If inventory is 23, set price to 110.0\n",
            " If inventory is 24, set price to 110.0\n",
            " If inventory is 25, set price to 110.0\n",
            " If inventory is 26, set price to 110.0\n",
            " If inventory is 27, set price to 110.0\n",
            " If inventory is 28, set price to 110.0\n",
            " If inventory is 29, set price to 110.0\n",
            " If inventory is 30, set price to 110.0\n",
            "month 8:\n",
            " If inventory is 0, set price to 110.0\n",
            " If inventory is 1, set price to 175.0\n",
            " If inventory is 2, set price to 175.0\n",
            " If inventory is 3, set price to 175.0\n",
            " If inventory is 4, set price to 175.0\n",
            " If inventory is 5, set price to 175.0\n",
            " If inventory is 6, set price to 175.0\n",
            " If inventory is 7, set price to 175.0\n",
            " If inventory is 8, set price to 175.0\n",
            " If inventory is 9, set price to 175.0\n",
            " If inventory is 10, set price to 150.0\n",
            " If inventory is 11, set price to 150.0\n",
            " If inventory is 12, set price to 150.0\n",
            " If inventory is 13, set price to 125.0\n",
            " If inventory is 14, set price to 125.0\n",
            " If inventory is 15, set price to 110.0\n",
            " If inventory is 16, set price to 110.0\n",
            " If inventory is 17, set price to 110.0\n",
            " If inventory is 18, set price to 110.0\n",
            " If inventory is 19, set price to 110.0\n",
            " If inventory is 20, set price to 110.0\n",
            " If inventory is 21, set price to 110.0\n",
            " If inventory is 22, set price to 110.0\n",
            " If inventory is 23, set price to 110.0\n",
            " If inventory is 24, set price to 110.0\n",
            " If inventory is 25, set price to 110.0\n",
            " If inventory is 26, set price to 110.0\n",
            " If inventory is 27, set price to 110.0\n",
            " If inventory is 28, set price to 110.0\n",
            " If inventory is 29, set price to 110.0\n",
            " If inventory is 30, set price to 110.0\n",
            "month 9:\n",
            " If inventory is 0, set price to 110.0\n",
            " If inventory is 1, set price to 175.0\n",
            " If inventory is 2, set price to 175.0\n",
            " If inventory is 3, set price to 175.0\n",
            " If inventory is 4, set price to 175.0\n",
            " If inventory is 5, set price to 175.0\n",
            " If inventory is 6, set price to 175.0\n",
            " If inventory is 7, set price to 175.0\n",
            " If inventory is 8, set price to 150.0\n",
            " If inventory is 9, set price to 150.0\n",
            " If inventory is 10, set price to 150.0\n",
            " If inventory is 11, set price to 125.0\n",
            " If inventory is 12, set price to 125.0\n",
            " If inventory is 13, set price to 110.0\n",
            " If inventory is 14, set price to 110.0\n",
            " If inventory is 15, set price to 110.0\n",
            " If inventory is 16, set price to 110.0\n",
            " If inventory is 17, set price to 110.0\n",
            " If inventory is 18, set price to 110.0\n",
            " If inventory is 19, set price to 110.0\n",
            " If inventory is 20, set price to 110.0\n",
            " If inventory is 21, set price to 110.0\n",
            " If inventory is 22, set price to 110.0\n",
            " If inventory is 23, set price to 110.0\n",
            " If inventory is 24, set price to 110.0\n",
            " If inventory is 25, set price to 110.0\n",
            " If inventory is 26, set price to 110.0\n",
            " If inventory is 27, set price to 110.0\n",
            " If inventory is 28, set price to 110.0\n",
            " If inventory is 29, set price to 110.0\n",
            " If inventory is 30, set price to 110.0\n",
            "month 10:\n",
            " If inventory is 0, set price to 110.0\n",
            " If inventory is 1, set price to 175.0\n",
            " If inventory is 2, set price to 175.0\n",
            " If inventory is 3, set price to 175.0\n",
            " If inventory is 4, set price to 175.0\n",
            " If inventory is 5, set price to 175.0\n",
            " If inventory is 6, set price to 175.0\n",
            " If inventory is 7, set price to 150.0\n",
            " If inventory is 8, set price to 150.0\n",
            " If inventory is 9, set price to 125.0\n",
            " If inventory is 10, set price to 110.0\n",
            " If inventory is 11, set price to 110.0\n",
            " If inventory is 12, set price to 110.0\n",
            " If inventory is 13, set price to 110.0\n",
            " If inventory is 14, set price to 110.0\n",
            " If inventory is 15, set price to 110.0\n",
            " If inventory is 16, set price to 110.0\n",
            " If inventory is 17, set price to 110.0\n",
            " If inventory is 18, set price to 110.0\n",
            " If inventory is 19, set price to 110.0\n",
            " If inventory is 20, set price to 110.0\n",
            " If inventory is 21, set price to 110.0\n",
            " If inventory is 22, set price to 110.0\n",
            " If inventory is 23, set price to 110.0\n",
            " If inventory is 24, set price to 110.0\n",
            " If inventory is 25, set price to 110.0\n",
            " If inventory is 26, set price to 110.0\n",
            " If inventory is 27, set price to 110.0\n",
            " If inventory is 28, set price to 110.0\n",
            " If inventory is 29, set price to 110.0\n",
            " If inventory is 30, set price to 110.0\n",
            "month 11:\n",
            " If inventory is 0, set price to 110.0\n",
            " If inventory is 1, set price to 175.0\n",
            " If inventory is 2, set price to 175.0\n",
            " If inventory is 3, set price to 175.0\n",
            " If inventory is 4, set price to 175.0\n",
            " If inventory is 5, set price to 150.0\n",
            " If inventory is 6, set price to 150.0\n",
            " If inventory is 7, set price to 110.0\n",
            " If inventory is 8, set price to 110.0\n",
            " If inventory is 9, set price to 110.0\n",
            " If inventory is 10, set price to 110.0\n",
            " If inventory is 11, set price to 110.0\n",
            " If inventory is 12, set price to 110.0\n",
            " If inventory is 13, set price to 110.0\n",
            " If inventory is 14, set price to 110.0\n",
            " If inventory is 15, set price to 110.0\n",
            " If inventory is 16, set price to 110.0\n",
            " If inventory is 17, set price to 110.0\n",
            " If inventory is 18, set price to 110.0\n",
            " If inventory is 19, set price to 110.0\n",
            " If inventory is 20, set price to 110.0\n",
            " If inventory is 21, set price to 110.0\n",
            " If inventory is 22, set price to 110.0\n",
            " If inventory is 23, set price to 110.0\n",
            " If inventory is 24, set price to 110.0\n",
            " If inventory is 25, set price to 110.0\n",
            " If inventory is 26, set price to 110.0\n",
            " If inventory is 27, set price to 110.0\n",
            " If inventory is 28, set price to 110.0\n",
            " If inventory is 29, set price to 110.0\n",
            " If inventory is 30, set price to 110.0\n",
            "month 12:\n",
            " If inventory is 0, set price to 110.0\n",
            " If inventory is 1, set price to 175.0\n",
            " If inventory is 2, set price to 175.0\n",
            " If inventory is 3, set price to 150.0\n",
            " If inventory is 4, set price to 110.0\n",
            " If inventory is 5, set price to 110.0\n",
            " If inventory is 6, set price to 110.0\n",
            " If inventory is 7, set price to 110.0\n",
            " If inventory is 8, set price to 110.0\n",
            " If inventory is 9, set price to 110.0\n",
            " If inventory is 10, set price to 110.0\n",
            " If inventory is 11, set price to 110.0\n",
            " If inventory is 12, set price to 110.0\n",
            " If inventory is 13, set price to 110.0\n",
            " If inventory is 14, set price to 110.0\n",
            " If inventory is 15, set price to 110.0\n",
            " If inventory is 16, set price to 110.0\n",
            " If inventory is 17, set price to 110.0\n",
            " If inventory is 18, set price to 110.0\n",
            " If inventory is 19, set price to 110.0\n",
            " If inventory is 20, set price to 110.0\n",
            " If inventory is 21, set price to 110.0\n",
            " If inventory is 22, set price to 110.0\n",
            " If inventory is 23, set price to 110.0\n",
            " If inventory is 24, set price to 110.0\n",
            " If inventory is 25, set price to 110.0\n",
            " If inventory is 26, set price to 110.0\n",
            " If inventory is 27, set price to 110.0\n",
            " If inventory is 28, set price to 110.0\n",
            " If inventory is 29, set price to 110.0\n",
            " If inventory is 30, set price to 110.0\n"
          ]
        }
      ]
    }
  ]
}